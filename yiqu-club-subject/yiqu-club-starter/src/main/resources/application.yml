# 指定项目启动端口号
server:
  port: 3000
spring:
  # 配置数据库连接（基本是固定写法）
  datasource:
    username: root
    password: DNlyDIZEzRv3qUSRj1LfKsBRKqUnOQnMG7NUskvIrtxgojtfdNDStLT8/ptWpyElMzm7LioQD0AhQv6u1NbJnA==
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.17.128:3306/jc_club?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false
    # 配置数据库连接池，本项目使用的是druid，所以配置durid即可，没有配置连接池则不写该项，使用默认的即可
    type: com.alibaba.druid.pool.DruidDataSource
    # 配置druid连接池的详细信息
    druid:
      initial-size: 20  # 初始化连接数
      min-idle: 20      # 最小空闲连接数
      max-active: 100   # 最大活跃连接数
      max-wait: 60000   # 获取连接时最大等待时间，单位毫秒
      # 配置数据库密码加密，password处写加密后的密码，publicKey是加密的公钥
      connectionProperties: config.decrypt=true;config.decrypt.key=${publicKey};
      # Druid监控配置
      stat-view-servlet:
        enabled: true            # 启用Druid监控页面
        url-pattern: /druid/*    # 监控页面的访问URL模式
        login-username: admin    # 监控页面的登录用户名
        login-password: 123456   # 监控页面的登录密码
      # Druid过滤器配置
      filter:
        # 监控统计拦截,用于统计和监控数据库连接的使用情况
        stat:
          enabled: true           # 启用stat过滤器
          slow-sql-millis: 2000   # 慢SQL阈值，单位毫秒
          log-slow-sql: true      # 记录慢SQL
        # 防御SQL注入
        wall:
          enabled: true   # 启用wall过滤器
        config:
          enabled: true   # 启用config过滤器，这个过滤器主要用于加载配置，通常不直接用于业务功能
# 加密后的公钥
publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJoyV0bOMP3yG3cusJuVGjpUl0fwcacMHrCtulE0mA4sR154p1JylHJLbroEQIkbHwFwBmnm7KgAdBVVIPfp91cCAwEAAQ==
logging:
  config: classpath:log4j2-spring.xml
# 打印日志
#mybatis-plus:
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl